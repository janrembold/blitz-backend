"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.express = void 0;
const pg_1 = require("pg");
const secretsManager_1 = require("./secretsManager");
const express = async (event) => {
    console.log("request:", JSON.stringify(event, undefined, 2));
    const DB_PASSWORD = await (0, secretsManager_1.getAwsSecret)(process.env.DB_HOST);
    console.log('SecretManager', DB_PASSWORD);
    try {
        const pool = new pg_1.Pool({
            user: 'postgres',
            password: DB_PASSWORD,
            host: process.env.DB_HOST,
            database: process.env.DB_NAME,
            port: parseInt(process.env.DB_PORT || '5432', 10),
        });
        pool.query('SELECT NOW()', (err, res) => {
            console.log(err, res);
            pool.end();
        });
    }
    catch (err) {
        return {
            statusCode: 200,
            headers: { "Content-Type": "text/plain" },
            body: `Buhhhh, CDK! You've hit "${err.message}"\n`
        };
    }
    return {
        statusCode: 200,
        headers: { "Content-Type": "text/plain" },
        body: `Hello, CDK! You've hit "${event.path}"\n`
    };
};
exports.express = express;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwyQkFBMEI7QUFDMUIscURBQWdEO0FBRXpDLE1BQU0sT0FBTyxHQUFHLEtBQUssRUFBRSxLQUFVLEVBQUUsRUFBRTtJQUN4QyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUU3RCxNQUFNLFdBQVcsR0FBRyxNQUFNLElBQUEsNkJBQVksRUFBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzVELE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBRTFDLElBQUk7UUFDQSxNQUFNLElBQUksR0FBRyxJQUFJLFNBQUksQ0FBQztZQUNsQixJQUFJLEVBQUUsVUFBVTtZQUNoQixRQUFRLEVBQUUsV0FBVztZQUNyQixJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPO1lBQ3pCLFFBQVEsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU87WUFDN0IsSUFBSSxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sSUFBSSxNQUFNLEVBQUUsRUFBRSxDQUFDO1NBQ3BELENBQUMsQ0FBQTtRQUVGLElBQUksQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUMsR0FBUSxFQUFFLEdBQVEsRUFBRSxFQUFFO1lBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFBO1lBQ3JCLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQTtRQUNkLENBQUMsQ0FBQyxDQUFBO0tBQ0w7SUFBQyxPQUFNLEdBQVEsRUFBRTtRQUNkLE9BQU87WUFDSCxVQUFVLEVBQUUsR0FBRztZQUNmLE9BQU8sRUFBRSxFQUFFLGNBQWMsRUFBRSxZQUFZLEVBQUU7WUFDekMsSUFBSSxFQUFFLDRCQUE0QixHQUFHLENBQUMsT0FBTyxLQUFLO1NBQ3JELENBQUM7S0FDTDtJQUVELE9BQU87UUFDSCxVQUFVLEVBQUUsR0FBRztRQUNmLE9BQU8sRUFBRSxFQUFFLGNBQWMsRUFBRSxZQUFZLEVBQUU7UUFDekMsSUFBSSxFQUFFLDJCQUEyQixLQUFLLENBQUMsSUFBSSxLQUFLO0tBQ25ELENBQUM7QUFDTixDQUFDLENBQUE7QUFoQ1ksUUFBQSxPQUFPLFdBZ0NuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvb2wgfSBmcm9tICdwZyc7XG5pbXBvcnQgeyBnZXRBd3NTZWNyZXQgfSBmcm9tICcuL3NlY3JldHNNYW5hZ2VyJztcblxuZXhwb3J0IGNvbnN0IGV4cHJlc3MgPSBhc3luYyAoZXZlbnQ6IGFueSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwicmVxdWVzdDpcIiwgSlNPTi5zdHJpbmdpZnkoZXZlbnQsIHVuZGVmaW5lZCwgMikpO1xuICAgIFxuICAgIGNvbnN0IERCX1BBU1NXT1JEID0gYXdhaXQgZ2V0QXdzU2VjcmV0KHByb2Nlc3MuZW52LkRCX0hPU1QpO1xuICAgIGNvbnNvbGUubG9nKCdTZWNyZXRNYW5hZ2VyJywgREJfUEFTU1dPUkQpO1xuXG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcG9vbCA9IG5ldyBQb29sKHtcbiAgICAgICAgICAgIHVzZXI6ICdwb3N0Z3JlcycsXG4gICAgICAgICAgICBwYXNzd29yZDogREJfUEFTU1dPUkQsXG4gICAgICAgICAgICBob3N0OiBwcm9jZXNzLmVudi5EQl9IT1NULFxuICAgICAgICAgICAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LkRCX05BTUUsXG4gICAgICAgICAgICBwb3J0OiBwYXJzZUludChwcm9jZXNzLmVudi5EQl9QT1JUIHx8ICc1NDMyJywgMTApLFxuICAgICAgICB9KVxuICAgICAgICBcbiAgICAgICAgcG9vbC5xdWVyeSgnU0VMRUNUIE5PVygpJywgKGVycjogYW55LCByZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyLCByZXMpXG4gICAgICAgICAgICBwb29sLmVuZCgpXG4gICAgICAgIH0pXG4gICAgfSBjYXRjaChlcnI6IGFueSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzQ29kZTogMjAwLFxuICAgICAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcInRleHQvcGxhaW5cIiB9LFxuICAgICAgICAgICAgYm9keTogYEJ1aGhoaCwgQ0RLISBZb3UndmUgaGl0IFwiJHtlcnIubWVzc2FnZX1cIlxcbmBcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXNDb2RlOiAyMDAsXG4gICAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJ0ZXh0L3BsYWluXCIgfSxcbiAgICAgICAgYm9keTogYEhlbGxvLCBDREshIFlvdSd2ZSBoaXQgXCIke2V2ZW50LnBhdGh9XCJcXG5gXG4gICAgfTtcbn0iXX0=